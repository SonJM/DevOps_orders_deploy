# 워크플로우의 이름을 지정
name: Deploy to Ec2 With Jar

# push 이벤트 지정
# main 브랜치에 push 될 때마다 워크플로우가 실행되도록 지정
on:
  push:
      branches:
        - master

jobs:
# 작업의 이름 지정
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Build Docker Image
      working-directory: ./order-system
      run: docker build -t blisle/order_backend:v2 .

    - name: DockerHub Login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker Image to DockerHub
      run: docker push blisle/order_backend:v2

    - name: ec2 ssh login and docker run
      uses: appleboy/ssh-action@master
      with: 
        host: ${{ secrets.EC2_HOST1 }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        # type docker : docker명령어가 현재 시스템에 존재하는지를 확인
        script: |
          if ! type docker > /dev/null ; then
            curl -s https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
          fi
          sudo docker login --username ${{ secrets.DOKER_USERNAME }} --password ${{secrets.DOCKER_PASSWORD}};

          sudo docker pull blisle/order_backend:v2
          sudo docker rm  -f order-backed || true

          sudo docker run -d --name order-backend -p 80:8080 \
          -e SPRING_DATASOURCE_URL=jdbc:mariadb://${{ secrets.DB_HOST }}:3306/ordersys \
          -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }} \
          -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} blisle/order_backend:v2
